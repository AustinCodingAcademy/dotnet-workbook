// <auto-generated />
using Cozy.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Cozy.Data.Migrations.CozyDb
{
    [DbContext(typeof(CozyDbContext))]
    partial class CozyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cozy.Domain.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Account");

                    b.Property<string>("BankName");

                    b.Property<int>("Routing");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Cozy.Domain.Models.Lease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<int>("LeaseTypeId");

                    b.Property<int>("PropertyId");

                    b.Property<DateTime>("Start");

                    b.Property<int>("TenantId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LeaseTypeId");

                    b.ToTable("Leases");
                });

            modelBuilder.Entity("Cozy.Domain.Models.LeaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("LeaseTypes");
                });

            modelBuilder.Entity("Cozy.Domain.Models.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("Posted");

                    b.Property<int>("PropertyId");

                    b.Property<int>("StatusId");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("Cozy.Domain.Models.MaintenanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceStatuses");
                });

            modelBuilder.Entity("Cozy.Domain.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("BankId");

                    b.Property<DateTime>("Posted");

                    b.Property<int>("PropertyId");

                    b.Property<int>("StatusId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("StatusId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Cozy.Domain.Models.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatuses");
                });

            modelBuilder.Entity("Cozy.Domain.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<int>("CurrentTenantId");

                    b.Property<string>("Image");

                    b.Property<int>("LandlordId");

                    b.Property<int>("PropertyTypeID");

                    b.Property<string>("State");

                    b.Property<int>("UserId");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("PropertyTypeID");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Cozy.Domain.Models.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("Cozy.Domain.Models.Lease", b =>
                {
                    b.HasOne("Cozy.Domain.Models.LeaseType", "Type")
                        .WithMany()
                        .HasForeignKey("LeaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cozy.Domain.Models.Maintenance", b =>
                {
                    b.HasOne("Cozy.Domain.Models.MaintenanceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cozy.Domain.Models.Payment", b =>
                {
                    b.HasOne("Cozy.Domain.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cozy.Domain.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cozy.Domain.Models.PaymentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cozy.Domain.Models.Property", b =>
                {
                    b.HasOne("Cozy.Domain.Models.PropertyType", "Type")
                        .WithMany()
                        .HasForeignKey("PropertyTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
